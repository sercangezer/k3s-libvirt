---
- name: Create download directory
  ansible.builtin.file:
    state: directory
    mode: "u=rwx,go=rx"
    dest: "{{ helm_download_dir }}"

- name: Download sha256sum
  ansible.builtin.get_url:
    url: "{{ helm_mirror }}/{{ helm_redis_filename }}.sha256"
    dest: "{{ helm_download_dir }}/{{ helm_redis_filename }}.sha256"
    force: no
    timeout: 300
    use_proxy: yes
    validate_certs: yes
    mode: "u=rw,go=r"

- name: Read sha256sum
  ansible.builtin.slurp:
    src: "{{ helm_download_dir }}/{{ helm_redis_filename }}.sha256"
  register: helm_sha256sum

- name: Download Helm
  ansible.builtin.get_url:
    url: "{{ helm_mirror }}/{{ helm_redis_filename }}"
    dest: "{{ helm_download_dir }}/{{ helm_redis_filename }}"
    checksum: "sha256:{{ helm_sha256sum.content | b64decode | trim }}"
    force: no
    timeout: 300
    use_proxy: yes
    validate_certs: yes
    mode: "u=rw,go=r"

- name: Check current version
  ansible.builtin.command: >
    {{ helm_install_dir }}/helm version --client --template {{ "'{{ if .Version }}{{ .Version }}{{ else }}{{ .Client.SemVer }}{{ end }}'" }}
  register: helm_current_version
  failed_when: no
  changed_when: no

- name: Current version
  ansible.builtin.debug:
    msg: "{{ helm_current_version.stdout }}"
  when: helm_current_version.rc == 0

- name: Remove existing installation
  become: yes
  ansible.builtin.file:
    path: "{{ helm_install_dir }}"
    state: absent
  when:
    - helm_current_version.rc == 0
    - helm_current_version.stdout != ('v' + helm_version)

- name: Create the Helm installation dir
  become: yes
  ansible.builtin.file:
    state: directory
    owner: root
    group: root
    mode: "u=rwx,go=rx"
    dest: "{{ helm_install_dir }}"

- name: Install unarchive module dependencies (apt, yum, dnf, zypper)
  become: yes
  ansible.builtin.package:
    name:
      - tar
      - unzip
      - gzip
    state: present
  when: ansible_pkg_mgr in ('apt', 'yum', 'dnf', 'zypper')

- name: Install Helm
  become: yes
  ansible.builtin.unarchive:
    src: "{{ helm_download_dir }}/{{ helm_redis_filename }}"
    remote_src: yes
    dest: "{{ helm_install_dir }}"
    extra_opts:
      - "--strip-components=1"
    owner: root
    group: root
    mode: "o-w"
    creates: "{{ helm_install_dir }}/helm"

- name: Create helm link
  become: yes
  ansible.builtin.file:
    src: "{{ helm_install_dir }}/helm"
    dest: "/usr/local/bin/helm"
    state: link
    owner: root
    group: root
    mode: "u=rwx,go=rx"

- name: "HELM autocomplete enable"
  ansible.builtin.shell: |
    helm completion bash  | tee /etc/bash_completion.d/helm > /dev/null
